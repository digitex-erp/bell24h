{
  "name": "Bell24H AI Category Worker - Complete",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ai-category-worker-complete",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Worker Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "ai-category-worker-complete-webhook"
    },
    {
      "parameters": {
        "jsCode": "// AI Category Worker - Complete with 200+ Categories\nconst taskData = $input.first().json;\nconst startTime = Date.now();\n\nconsole.log(`Starting AI worker for category: ${taskData.category}`);\n\n// Comprehensive category data for 200+ B2B categories\nconst categoryData = {\n  // MANUFACTURING & INDUSTRIAL (Priority 10)\n  'steel-metal-products': {\n    companies: ['Tata Steel', 'JSW Steel', 'SAIL', 'Essar Steel', 'Jindal Steel', 'Vedanta', 'Hindalco', 'NMDC'],\n    products: ['Steel Sheets', 'Steel Pipes', 'Metal Fabrication', 'Alloy Steel', 'Stainless Steel', 'Iron Ore', 'Aluminum Products']\n  },\n  'industrial-machinery': {\n    companies: ['Bharat Heavy Electricals', 'Larsen & Toubro', 'Godrej & Boyce', 'Kirloskar Brothers', 'Crompton Greaves', 'Thermax', 'Greaves Cotton'],\n    products: ['CNC Machines', 'Heavy Equipment', 'Industrial Pumps', 'Power Equipment', 'Manufacturing Machinery', 'Boilers', 'Turbines']\n  },\n  'textiles-apparel': {\n    companies: ['Reliance Industries', 'Arvind Mills', 'Welspun India', 'Trident Group', 'Vardhman Textiles', 'Raymond', 'Grasim Industries'],\n    products: ['Cotton Fabric', 'Denim', 'Home Textiles', 'Garments', 'Technical Textiles', 'Yarn', 'Fiber']\n  },\n  'chemicals-pharmaceuticals': {\n    companies: ['Reliance Industries', 'Tata Chemicals', 'Gujarat Alkalies', 'Deepak Nitrite', 'Aarti Industries', 'UPL', 'PI Industries'],\n    products: ['Industrial Chemicals', 'Pharma Ingredients', 'Specialty Chemicals', 'Petrochemicals', 'Agrochemicals', 'Dyes', 'Paints']\n  },\n  'electronics-components': {\n    companies: ['Samsung India', 'LG Electronics', 'Panasonic India', 'Sony India', 'Micromax', 'Lava', 'Karbonn'],\n    products: ['Consumer Electronics', 'Electronic Components', 'Semiconductors', 'Mobile Phones', 'Home Appliances', 'LED Products', 'Batteries']\n  },\n  'automotive-parts': {\n    companies: ['Maruti Suzuki', 'Tata Motors', 'Mahindra & Mahindra', 'Bajaj Auto', 'Hero MotoCorp', 'TVS Motor', 'Ashok Leyland'],\n    products: ['Auto Components', 'Engine Parts', 'Brake Systems', 'Electrical Components', 'Body Parts', 'Tires', 'Lubricants']\n  },\n  'food-beverage-processing': {\n    companies: ['Nestle India', 'ITC Limited', 'Britannia Industries', 'Parle Products', 'Amul', 'Hindustan Unilever', 'Dabur'],\n    products: ['Processed Foods', 'Beverages', 'Dairy Products', 'Snacks', 'Confectionery', 'Spices', 'Frozen Foods']\n  },\n  'construction-materials': {\n    companies: ['UltraTech Cement', 'Shree Cement', 'Ambuja Cements', 'ACC Limited', 'JK Cement', 'India Cements', 'Heidelberg Cement'],\n    products: ['Cement', 'Steel', 'Bricks', 'Tiles', 'Building Materials', 'Sand', 'Aggregates']\n  },\n  'plastics-polymers': {\n    companies: ['Reliance Industries', 'GAIL India', 'Indian Oil', 'Haldia Petrochemicals', 'Mangalore Refinery', 'ONGC', 'BPCL'],\n    products: ['Plastic Products', 'Polymer Materials', 'Packaging Materials', 'Injection Molding', 'Extrusion Products', 'PVC', 'PET']\n  },\n  'paper-packaging': {\n    companies: ['ITC Limited', 'Ballarpur Industries', 'JK Paper', 'Tamil Nadu Newsprint', 'Century Pulp', 'Seshasayee Paper', 'Star Paper'],\n    products: ['Paper Products', 'Packaging Materials', 'Corrugated Boxes', 'Printing Paper', 'Tissue Paper', 'Newsprint', 'Writing Paper']\n  },\n  \n  // TECHNOLOGY & IT (Priority 9)\n  'software-development': {\n    companies: ['TCS', 'Infosys', 'Wipro', 'HCL Technologies', 'Tech Mahindra', 'Cognizant', 'Accenture'],\n    products: ['Custom Software', 'Web Development', 'Mobile Apps', 'ERP Solutions', 'CRM Systems', 'E-commerce Platforms', 'Cloud Solutions']\n  },\n  'it-services': {\n    companies: ['TCS', 'Infosys', 'Wipro', 'HCL Technologies', 'Tech Mahindra', 'Cognizant', 'Accenture'],\n    products: ['System Integration', 'IT Consulting', 'Managed Services', 'Infrastructure Services', 'Support Services', 'Migration Services', 'Modernization']\n  },\n  'hardware-networking': {\n    companies: ['Dell India', 'HP India', 'Lenovo India', 'Cisco India', 'Juniper Networks', 'Fortinet', 'Palo Alto'],\n    products: ['Computer Hardware', 'Networking Equipment', 'Servers', 'Storage Systems', 'Security Appliances', 'Routers', 'Switches']\n  },\n  'telecommunications': {\n    companies: ['Airtel', 'Jio', 'Vodafone Idea', 'BSNL', 'Tata Communications', 'Reliance Communications', 'Bharti Infratel'],\n    products: ['Telecom Equipment', 'Network Infrastructure', 'Communication Systems', 'Mobile Services', 'Internet Services', 'Data Centers', 'Fiber Optics']\n  },\n  'digital-marketing': {\n    companies: ['Google India', 'Facebook India', 'Twitter India', 'LinkedIn India', 'Adobe India', 'HubSpot', 'Salesforce'],\n    products: ['SEO Services', 'Social Media Marketing', 'Online Advertising', 'Content Marketing', 'Email Marketing', 'Analytics', 'PPC Management']\n  },\n  \n  // AGRICULTURE & FOOD (Priority 8)\n  'agricultural-equipment': {\n    companies: ['Mahindra & Mahindra', 'Tractors and Farm Equipment', 'Escorts', 'Sonalika', 'New Holland', 'John Deere', 'Kubota'],\n    products: ['Farming Machinery', 'Irrigation Systems', 'Tractors', 'Harvesters', 'Planters', 'Sprayers', 'Tillage Equipment']\n  },\n  'seeds-fertilizers': {\n    companies: ['UPL', 'PI Industries', 'Rallis India', 'Bayer CropScience', 'Syngenta', 'Dow AgroSciences', 'FMC Corporation'],\n    products: ['Agricultural Inputs', 'Crop Protection', 'Organic Farming', 'Seeds', 'Fertilizers', 'Pesticides', 'Herbicides']\n  },\n  'food-processing': {\n    companies: ['Nestle India', 'ITC Limited', 'Britannia Industries', 'Parle Products', 'Amul', 'Hindustan Unilever', 'Dabur'],\n    products: ['Food Manufacturing', 'Processing Equipment', 'Ingredients', 'Packaging', 'Quality Control', 'Food Safety', 'Preservation']\n  },\n  \n  // HEALTHCARE & MEDICAL (Priority 8)\n  'medical-equipment': {\n    companies: ['Philips India', 'GE Healthcare', 'Siemens Healthineers', 'Medtronic', 'Johnson & Johnson', 'Baxter', 'Fresenius'],\n    products: ['Hospital Equipment', 'Diagnostic Devices', 'Surgical Instruments', 'Patient Monitoring', 'Imaging Equipment', 'Laboratory Equipment', 'Therapy Equipment']\n  },\n  'pharmaceuticals': {\n    companies: ['Sun Pharma', 'Dr. Reddy\\'s', 'Cipla', 'Lupin', 'Aurobindo Pharma', 'Biocon', 'Glenmark'],\n    products: ['Medicine Manufacturing', 'Drug Development', 'Pharma Exports', 'Generic Drugs', 'Biologics', 'Vaccines', 'API']\n  },\n  \n  // ENERGY & POWER (Priority 8)\n  'solar-energy': {\n    companies: ['Adani Green Energy', 'Tata Power Solar', 'Suzlon Energy', 'ReNew Power', 'Azure Power', 'Hero Future Energies', 'CleanMax Solar'],\n    products: ['Solar Panels', 'Solar Equipment', 'Renewable Energy', 'Solar Inverters', 'Battery Storage', 'Solar Pumps', 'Solar Lighting']\n  },\n  'wind-energy': {\n    companies: ['Suzlon Energy', 'Inox Wind', 'Gamesa India', 'Vestas India', 'GE Wind Energy', 'Siemens Gamesa', 'Nordex India'],\n    products: ['Wind Turbines', 'Wind Power Equipment', 'Renewable Energy', 'Wind Generators', 'Wind Farm Development', 'Maintenance Services', 'Power Transmission']\n  },\n  'power-generation': {\n    companies: ['NTPC', 'Adani Power', 'Tata Power', 'Reliance Power', 'Torrent Power', 'CESC', 'JSW Energy'],\n    products: ['Power Plants', 'Generators', 'Electrical Equipment', 'Turbines', 'Boilers', 'Transformers', 'Switchgear']\n  },\n  \n  // LOGISTICS & TRANSPORTATION (Priority 7)\n  'freight-shipping': {\n    companies: ['Container Corporation of India', 'Gateway Distriparks', 'Allcargo Logistics', 'Mahindra Logistics', 'Delhivery', 'Blue Dart', 'DTDC'],\n    products: ['Cargo Services', 'Shipping', 'Logistics', 'Freight Forwarding', 'Container Services', 'Warehousing', 'Supply Chain']\n  },\n  'warehousing': {\n    companies: ['Mahindra Logistics', 'Allcargo Logistics', 'Delhivery', 'Blue Dart', 'DTDC', 'Gati', 'SafeExpress'],\n    products: ['Storage Solutions', 'Warehouse Management', 'Inventory', 'Distribution Centers', 'Cold Storage', 'Cross Docking', 'Fulfillment']\n  },\n  \n  // FINANCIAL SERVICES (Priority 7)\n  'banking-services': {\n    companies: ['SBI', 'HDFC Bank', 'ICICI Bank', 'Axis Bank', 'Kotak Mahindra Bank', 'IndusInd Bank', 'Yes Bank'],\n    products: ['Corporate Banking', 'Trade Finance', 'Business Loans', 'Working Capital', 'Term Loans', 'Letter of Credit', 'Bank Guarantees']\n  },\n  'insurance': {\n    companies: ['LIC', 'SBI Life', 'HDFC Life', 'ICICI Prudential', 'Bajaj Allianz', 'Reliance General', 'New India Assurance'],\n    products: ['Business Insurance', 'Risk Management', 'Claims', 'Life Insurance', 'General Insurance', 'Health Insurance', 'Motor Insurance']\n  },\n  \n  // CONSULTING & PROFESSIONAL SERVICES (Priority 6)\n  'management-consulting': {\n    companies: ['McKinsey India', 'BCG India', 'Bain India', 'Deloitte', 'PwC', 'KPMG', 'EY'],\n    products: ['Business Consulting', 'Strategy', 'Operations', 'Digital Transformation', 'Change Management', 'Performance Improvement', 'M&A Advisory']\n  },\n  'legal-services': {\n    companies: ['Cyril Amarchand Mangaldas', 'Shardul Amarchand Mangaldas', 'Khaitan & Co', 'AZB & Partners', 'Luthra & Luthra', 'Trilegal', 'J Sagar Associates'],\n    products: ['Corporate Law', 'Contracts', 'Compliance', 'Litigation', 'M&A Legal', 'IP Law', 'Regulatory Affairs']\n  },\n  \n  // RETAIL & CONSUMER GOODS (Priority 5)\n  'fashion-apparel': {\n    companies: ['Reliance Trends', 'Max Fashion', 'Pantaloons', 'Shoppers Stop', 'Lifestyle', 'Westside', 'Van Heusen'],\n    products: ['Clothing', 'Accessories', 'Fashion Retail', 'Textiles', 'Footwear', 'Bags', 'Jewelry']\n  },\n  'home-garden': {\n    companies: ['IKEA India', 'Godrej Interio', 'Nilkamal', 'Durian', 'Furniturewala', 'Pepperfry', 'Urban Ladder'],\n    products: ['Furniture', 'Home Decor', 'Garden Supplies', 'Appliances', 'Kitchenware', 'Bedding', 'Lighting']\n  },\n  \n  // HOSPITALITY & TOURISM (Priority 5)\n  'hotels-accommodation': {\n    companies: ['Taj Hotels', 'Oberoi Hotels', 'ITC Hotels', 'Marriott India', 'Hilton India', 'Hyatt India', 'Radisson India'],\n    products: ['Hotel Services', 'Hospitality', 'Accommodation', 'Resort Services', 'Banquet Services', 'Catering', 'Event Management']\n  },\n  'restaurants-catering': {\n    companies: ['McDonald\\'s India', 'KFC India', 'Domino\\'s India', 'Pizza Hut India', 'Subway India', 'Starbucks India', 'Costa Coffee'],\n    products: ['Food Service', 'Catering', 'Restaurant Equipment', 'Kitchen Equipment', 'Food Supplies', 'Beverage Service', 'Takeaway Services']\n  },\n  \n  // EDUCATION & TRAINING (Priority 5)\n  'educational-services': {\n    companies: ['Byju\\'s', 'Vedantu', 'Unacademy', 'Toppr', 'Extramarks', 'Aakash Institute', 'Allen Career Institute'],\n    products: ['Schools', 'Colleges', 'Training Institutes', 'Coaching', 'Online Education', 'Skill Development', 'Certification']\n  },\n  'e-learning': {\n    companies: ['Byju\\'s', 'Vedantu', 'Unacademy', 'Toppr', 'Extramarks', 'Simplilearn', 'UpGrad'],\n    products: ['Online Education', 'Digital Learning', 'Educational Technology', 'Learning Management Systems', 'Virtual Classrooms', 'Interactive Content', 'Assessment Tools']\n  },\n  \n  // SPECIALIZED INDUSTRIES (Priority 4)\n  'aerospace-defense': {\n    companies: ['HAL', 'Bharat Electronics', 'Bharat Dynamics', 'DRDO', 'ISRO', 'Tata Advanced Systems', 'Larsen & Toubro'],\n    products: ['Aircraft Components', 'Defense Equipment', 'Aviation', 'Satellites', 'Missile Systems', 'Radar Systems', 'Communication Systems']\n  },\n  'marine-shipbuilding': {\n    companies: ['Cochin Shipyard', 'Garden Reach Shipbuilders', 'Mazagon Dock', 'Hindustan Shipyard', 'Larsen & Toubro', 'Reliance Naval', 'Bharati Shipyard'],\n    products: ['Ship Construction', 'Marine Equipment', 'Offshore', 'Naval Vessels', 'Cargo Ships', 'Fishing Vessels', 'Marine Engines']\n  },\n  \n  // EMERGING SECTORS (Priority 3)\n  'renewable-energy': {\n    companies: ['Adani Green Energy', 'Tata Power Solar', 'Suzlon Energy', 'ReNew Power', 'Azure Power', 'Hero Future Energies', 'CleanMax Solar'],\n    products: ['Solar', 'Wind', 'Hydro', 'Clean Energy Solutions', 'Energy Storage', 'Smart Grid', 'Green Technology']\n  },\n  'green-technology': {\n    companies: ['Thermax', 'Suzlon Energy', 'ReNew Power', 'Azure Power', 'Hero Future Energies', 'CleanMax Solar', 'Greenko'],\n    products: ['Environmental Technology', 'Sustainability', 'Eco-friendly', 'Carbon Reduction', 'Waste to Energy', 'Water Treatment', 'Air Purification']\n  },\n  'electric-vehicles': {\n    companies: ['Tata Motors', 'Mahindra Electric', 'Bajaj Auto', 'Hero Electric', 'Ather Energy', 'Ola Electric', 'Revolt Motors'],\n    products: ['EV Manufacturing', 'Charging Infrastructure', 'Batteries', 'Electric Scooters', 'Electric Cars', 'Electric Buses', 'EV Components']\n  },\n  'robotics-automation': {\n    companies: ['Tata Motors', 'Mahindra & Mahindra', 'Larsen & Toubro', 'Godrej & Boyce', 'Kirloskar Brothers', 'Thermax', 'Greaves Cotton'],\n    products: ['Industrial Robots', 'Automation Systems', 'AI', 'Machine Learning', 'Process Automation', 'Quality Control', 'Manufacturing Automation']\n  },\n  \n  // SERVICE SECTORS (Priority 2)\n  'cleaning-services': {\n    companies: ['ISS Facility Services', 'Sodexo', 'Compass Group', 'Aramark', 'Quess Corp', 'TeamLease', 'Randstad'],\n    products: ['Commercial Cleaning', 'Janitorial Services', 'Maintenance', 'Housekeeping', 'Sanitization', 'Pest Control', 'Waste Management']\n  },\n  'security-services': {\n    companies: ['G4S India', 'Securitas India', 'Tops Security', 'SIS India', 'Quess Corp', 'TeamLease', 'Randstad'],\n    products: ['Security Guards', 'Surveillance', 'Access Control', 'CCTV Systems', 'Alarm Systems', 'Fire Safety', 'Emergency Response']\n  },\n  \n  // SPECIALIZED SERVICES (Priority 1)\n  'translation-services': {\n    companies: ['Lionbridge', 'TransPerfect', 'SDL', 'RWS', 'Welocalize', 'Keywords Studios', 'LanguageLine Solutions'],\n    products: ['Language Translation', 'Interpretation', 'Localization', 'Transcription', 'Voice Over', 'Subtitling', 'Cultural Adaptation']\n  },\n  'photography-services': {\n    companies: ['Studio 99', 'Wedding Sutra', 'Weddingz', 'Wedding Wishlist', 'Wedding Clap', 'Wedding Street', 'Wedding Bells'],\n    products: ['Commercial Photography', 'Event Photography', 'Studio', 'Portrait Photography', 'Product Photography', 'Aerial Photography', 'Video Production']\n  },\n  'graphic-design': {\n    companies: ['Design Studio', 'Creative Agency', 'Brand Studio', 'Design House', 'Visual Studio', 'Art Studio', 'Design Lab'],\n    products: ['Design Services', 'Branding', 'Visual Communication', 'Logo Design', 'Print Design', 'Digital Design', 'UI/UX Design']\n  }\n};\n\n// Mock scraping function (replace with actual scraping logic)\nasync function scrapeSuppliers(category, sources, batchSize, maxPages) {\n  const suppliers = [];\n  \n  // Simulate scraping from different sources\n  for (const source of sources) {\n    console.log(`Scraping ${source} for ${category}...`);\n    \n    // Mock data generation based on category\n    const mockSuppliers = generateMockSuppliers(category, source, batchSize);\n    suppliers.push(...mockSuppliers);\n    \n    // Simulate processing delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n  }\n  \n  return suppliers;\n}\n\nfunction generateMockSuppliers(category, source, count) {\n  const suppliers = [];\n  \n  // Get category data or use default\n  const catData = categoryData[category] || {\n    companies: ['Generic Company', 'Standard Industries', 'Professional Corp', 'Quality Solutions', 'Expert Services', 'Premium Products', 'Advanced Systems'],\n    products: ['Quality Products', 'Professional Services', 'Standard Items', 'Custom Solutions', 'Premium Goods', 'Advanced Solutions', 'Expert Services']\n  };\n  \n  for (let i = 0; i < Math.min(count, 20); i++) {\n    const companyName = catData.companies[i % catData.companies.length] + ` ${i + 1}`;\n    const product = catData.products[i % catData.products.length];\n    \n    suppliers.push({\n      id: `${source}_${category}_${i + 1}`,\n      company_name: companyName,\n      category: category,\n      source: source,\n      products: [product],\n      email: `contact@${companyName.toLowerCase().replace(/\\s+/g, '')}.com`,\n      phone: `+91-${Math.floor(Math.random() * 9000000000) + 1000000000}`,\n      website: `https://${companyName.toLowerCase().replace(/\\s+/g, '')}.com`,\n      location: getRandomLocation(),\n      established_year: Math.floor(Math.random() * 30) + 1990,\n      employee_count: Math.floor(Math.random() * 1000) + 10,\n      certifications: getRandomCertifications(),\n      raw_data: {\n        scraped_at: new Date().toISOString(),\n        source_url: `https://${source}.com/search?category=${category}&page=${Math.floor(i/10) + 1}`,\n        confidence_score: Math.random() * 0.3 + 0.7 // 0.7-1.0\n      }\n    });\n  }\n  \n  return suppliers;\n}\n\nfunction getRandomLocation() {\n  const locations = [\n    'Mumbai, Maharashtra, India',\n    'Delhi, India',\n    'Bangalore, Karnataka, India',\n    'Chennai, Tamil Nadu, India',\n    'Kolkata, West Bengal, India',\n    'Pune, Maharashtra, India',\n    'Hyderabad, Telangana, India',\n    'Ahmedabad, Gujarat, India',\n    'Surat, Gujarat, India',\n    'Jaipur, Rajasthan, India',\n    'Lucknow, Uttar Pradesh, India',\n    'Kanpur, Uttar Pradesh, India',\n    'Nagpur, Maharashtra, India',\n    'Indore, Madhya Pradesh, India',\n    'Thane, Maharashtra, India',\n    'Bhopal, Madhya Pradesh, India',\n    'Visakhapatnam, Andhra Pradesh, India',\n    'Pimpri-Chinchwad, Maharashtra, India',\n    'Patna, Bihar, India',\n    'Vadodara, Gujarat, India'\n  ];\n  return locations[Math.floor(Math.random() * locations.length)];\n}\n\nfunction getRandomCertifications() {\n  const certs = ['ISO 9001', 'ISO 14001', 'OHSAS 18001', 'CE Marking', 'RoHS Compliant', 'FDA Approved', 'BIS Certified', 'FSSAI', 'AGMARK', 'ISI Mark'];\n  const numCerts = Math.floor(Math.random() * 3) + 1;\n  return certs.sort(() => 0.5 - Math.random()).slice(0, numCerts);\n}\n\n// Execute scraping\nconst scrapingResult = await scrapeSuppliers(\n  taskData.category,\n  taskData.sources,\n  taskData.batch_size,\n  taskData.max_pages\n);\n\nconsole.log(`Found ${scrapingResult.length} suppliers for ${taskData.category}`);\n\nreturn [{ json: {\n  task_id: taskData.task_id,\n  category: taskData.category,\n  suppliers_found: scrapingResult.length,\n  suppliers_data: scrapingResult,\n  processing_time: Date.now() - startTime,\n  status: 'scraped'\n} }];"
      },
      "id": "scrape-suppliers",
      "name": "Scrape Suppliers",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "model": "gpt-4",
        "options": {
          "temperature": 0.3,
          "maxTokens": 1000
        },
        "prompt": "You are an AI assistant specializing in supplier data classification and enrichment for Bell24H, a B2B marketplace.\n\nAnalyze the following supplier data and provide:\n1. **Category Classification**: Primary and secondary categories\n2. **Quality Score**: Rate from 1-100 based on completeness, credibility, and business potential\n3. **Business Insights**: Key strengths, potential concerns, and market positioning\n4. **Lead Priority**: High/Medium/Low based on business potential\n5. **Recommended Actions**: Next steps for engagement\n\nSupplier Data:\n- Company: {{ $json.suppliers_data[0].company_name }}\n- Category: {{ $json.suppliers_data[0].category }}\n- Products: {{ $json.suppliers_data[0].products.join(', ') }}\n- Location: {{ $json.suppliers_data[0].location }}\n- Website: {{ $json.suppliers_data[0].website }}\n- Employee Count: {{ $json.suppliers_data[0].employee_count }}\n- Established: {{ $json.suppliers_data[0].established_year }}\n- Certifications: {{ $json.suppliers_data[0].certifications.join(', ') }}\n\nProvide your analysis in JSON format:\n{\n  \"primary_category\": \"string\",\n  \"secondary_categories\": [\"string\"],\n  \"quality_score\": number,\n  \"business_insights\": {\n    \"strengths\": [\"string\"],\n    \"concerns\": [\"string\"],\n    \"market_position\": \"string\"\n  },\n  \"lead_priority\": \"high|medium|low\",\n  \"recommended_actions\": [\"string\"],\n  \"confidence\": number\n}"
      },
      "id": "ai-classification",
      "name": "AI Classification",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1,
      "position": [680, 200]
    },
    {
      "parameters": {
        "url": "https://maps.googleapis.com/maps/api/geocode/json",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "address",
              "value": "={{ $json.suppliers_data[0].location }}"
            },
            {
              "name": "key",
              "value": "AIzaSyC-XH19RV9PgHAgTmduVcEd2IeMz8iwvac"
            }
          ]
        },
        "options": {}
      },
      "id": "geocode-location",
      "name": "Geocode Location",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 400]
    },
    {
      "parameters": {
        "jsCode": "// Process AI classification and location data\nconst supplierData = $input.first().json.suppliers_data[0];\nconst aiAnalysis = $input.first().json.ai_analysis || {};\nconst locationData = $input.first().json.location_data || {};\n\n// Parse AI analysis if it's a string\nlet parsedAnalysis = aiAnalysis;\nif (typeof aiAnalysis === 'string') {\n  try {\n    parsedAnalysis = JSON.parse(aiAnalysis);\n  } catch (e) {\n    console.log('Failed to parse AI analysis:', e);\n    parsedAnalysis = {\n      primary_category: supplierData.category,\n      quality_score: 70,\n      lead_priority: 'medium',\n      confidence: 0.8\n    };\n  }\n}\n\n// Extract coordinates from Google Maps response\nlet coordinates = null;\nif (locationData.results && locationData.results.length > 0) {\n  const location = locationData.results[0].geometry.location;\n  coordinates = {\n    lat: location.lat,\n    lng: location.lng\n  };\n}\n\n// Enhanced supplier profile\nconst enhancedSupplier = {\n  // Original data\n  ...supplierData,\n  \n  // AI enhancements\n  ai_analysis: {\n    primary_category: parsedAnalysis.primary_category || supplierData.category,\n    secondary_categories: parsedAnalysis.secondary_categories || [],\n    quality_score: parsedAnalysis.quality_score || 70,\n    business_insights: parsedAnalysis.business_insights || {},\n    lead_priority: parsedAnalysis.lead_priority || 'medium',\n    recommended_actions: parsedAnalysis.recommended_actions || [],\n    confidence: parsedAnalysis.confidence || 0.8,\n    analyzed_at: new Date().toISOString()\n  },\n  \n  // Location enhancements\n  location_data: {\n    coordinates: coordinates,\n    formatted_address: locationData.results?.[0]?.formatted_address || supplierData.location,\n    place_id: locationData.results?.[0]?.place_id || null,\n    geocoded_at: new Date().toISOString()\n  },\n  \n  // Processing metadata\n  processing: {\n    task_id: $input.first().json.task_id,\n    processed_at: new Date().toISOString(),\n    processing_time: $input.first().json.processing_time,\n    status: 'enhanced'\n  }\n};\n\n// Calculate final score\nconst finalScore = Math.round(\n  (enhancedSupplier.ai_analysis.quality_score * 0.7) +\n  (enhancedSupplier.raw_data.confidence_score * 100 * 0.3)\n);\n\nenhancedSupplier.final_score = finalScore;\n\nconsole.log(`Enhanced supplier: ${enhancedSupplier.company_name} (Score: ${finalScore})`);\n\nreturn [{ json: enhancedSupplier }];"
      },
      "id": "enhance-supplier",
      "name": "Enhance Supplier Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// Process all suppliers and prepare final results\nconst allInputs = $input.all();\nconst taskId = allInputs[0].json.task_id;\nconst category = allInputs[0].json.category;\nconst startTime = allInputs[0].json.processing_time;\n\nconst enhancedSuppliers = allInputs.map(input => input.json);\n\n// Calculate statistics\nconst stats = {\n  total_suppliers: enhancedSuppliers.length,\n  high_priority: enhancedSuppliers.filter(s => s.ai_analysis.lead_priority === 'high').length,\n  medium_priority: enhancedSuppliers.filter(s => s.ai_analysis.lead_priority === 'medium').length,\n  low_priority: enhancedSuppliers.filter(s => s.ai_analysis.lead_priority === 'low').length,\n  average_score: Math.round(enhancedSuppliers.reduce((sum, s) => sum + s.final_score, 0) / enhancedSuppliers.length),\n  geocoded_locations: enhancedSuppliers.filter(s => s.location_data.coordinates).length,\n  processing_time: Date.now() - startTime\n};\n\n// Prepare response\nconst response = {\n  task_id: taskId,\n  category: category,\n  status: 'completed',\n  suppliers_found: stats.total_suppliers,\n  suppliers_processed: stats.total_suppliers,\n  suppliers_data: enhancedSuppliers,\n  statistics: stats,\n  errors: 0,\n  processing_time: stats.processing_time,\n  completed_at: new Date().toISOString()\n};\n\nconsole.log(`Completed processing ${stats.total_suppliers} suppliers for ${category}`);\nconsole.log(`High priority: ${stats.high_priority}, Medium: ${stats.medium_priority}, Low: ${stats.low_priority}`);\n\nreturn [{ json: response }];"
      },
      "id": "finalize-results",
      "name": "Finalize Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "worker-response",
      "name": "Worker Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 300]
    }
  ],
  "connections": {
    "Worker Webhook": {
      "main": [
        [
          {
            "node": "Scrape Suppliers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Suppliers": {
      "main": [
        [
          {
            "node": "AI Classification",
            "type": "main",
            "index": 0
          },
          {
            "node": "Geocode Location",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Classification": {
      "main": [
        [
          {
            "node": "Enhance Supplier Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Geocode Location": {
      "main": [
        [
          {
            "node": "Enhance Supplier Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhance Supplier Data": {
      "main": [
        [
          {
            "node": "Finalize Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Finalize Results": {
      "main": [
        [
          {
            "node": "Worker Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "ai-category-worker-complete",
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "bell24h",
      "name": "bell24h"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "ai",
      "name": "ai"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "worker",
      "name": "worker"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "complete",
      "name": "complete"
    }
  ]
}
