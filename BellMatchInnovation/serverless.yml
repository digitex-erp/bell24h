service: bell24h-backend

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-south-1
  stage: ${opt:stage, 'dev'}
  environment:
    NODE_ENV: ${self:provider.stage}
    DATABASE_URL: ${env:DATABASE_URL}
    JWT_SECRET: ${env:JWT_SECRET}
    S3_BUCKET: ${self:custom.s3Bucket}
    SQS_QUEUE: ${self:custom.sqsQueue}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
            - s3:*
            - sqs:*
            - sns:*
          Resource: "*"

custom:
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002
  s3Bucket: bell24h-${self:provider.stage}-storage
  sqsQueue: bell24h-${self:provider.stage}-queue

functions:
  api:
    handler: src/api.handler
    events:
      - http:
          path: /{proxy+}
          method: any
          cors: true
  websocket:
    handler: src/websocket.handler
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: $default
  processQueue:
    handler: src/queue.handler
    events:
      - sqs:
          arn: !GetAtt Bell24hQueue.Arn
          batchSize: 10
  processUpload:
    handler: src/upload.handler
    events:
      - s3:
          bucket: ${self:custom.s3Bucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploads/
            - suffix: .pdf,.doc,.docx

resources:
  Resources:
    Bell24hTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: bell24h-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    Bell24hBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3Bucket}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
              AllowedOrigins:
                - "*"
              MaxAge: 3000

    Bell24hQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsQueue}
        VisibilityTimeout: 300
        MessageRetentionPeriod: 1209600
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt Bell24hDLQ.Arn
          maxReceiveCount: 3

    Bell24hDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqsQueue}-dlq
        MessageRetentionPeriod: 1209600

plugins:
  - serverless-offline
  - serverless-dynamodb-local 