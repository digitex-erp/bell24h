name: Deploy Bell24h to Vercel (Manual Only)

on:
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup environment variables (from secrets)
      run: |
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
        echo "RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}" >> $GITHUB_ENV
        echo "RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}" >> $GITHUB_ENV
        echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> $GITHUB_ENV
        echo "NEXTAUTH_URL=https://www.bell24h.com" >> $GITHUB_ENV
        echo "NODE_ENV=production" >> $GITHUB_ENV
        
    - name: Generate Prisma client
      run: npx prisma generate
      
    - name: Push database schema to Neon
      run: npx prisma db push
      continue-on-error: true
      
    - name: Build application
      run: npm run build
      
    - name: Install Vercel CLI
      run: npm install -g vercel@latest
      
    - name: Deploy to Vercel (Production)
      run: |
        vercel --prod \
               --token ${{ secrets.VERCEL_TOKEN }} \
               --project ${{ secrets.VERCEL_PROJECT_ID }} \
               --org ${{ secrets.VERCEL_ORG_ID }} \
               --confirm
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        
    # Removed PR comment step to reduce noise and permissions
          
    - name: Deploy Status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
          if [ "${{ github.ref }}" == "refs/heads/main" ] || [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "üåê Production URL: https://www.bell24h.com"
          else
            echo "üîç Preview deployment created"
          fi
        else
          echo "‚ùå Deployment failed!"
          exit 1
        fi