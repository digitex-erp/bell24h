name: 🚀 Deploy Bell24H Comprehensive B2B Marketplace

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Job 1: Setup and Build
  setup-and-build:
    name: 🔧 Setup and Build
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.changes.outputs.should-deploy }}
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📋 Check for Changes
        id: changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E '^(client/|\.github/)'; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
          else
            echo "should-deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: 📦 Install Dependencies
        working-directory: ./client
        run: |
          npm ci
          npm install -g vercel

      - name: 🏗️ Build Project
        working-directory: ./client
        run: |
          npm run build
        env:
          NODE_ENV: production

      - name: 🧪 Run Tests
        working-directory: ./client
        run: |
          npm run test -- --coverage --watchAll=false
        continue-on-error: true

      - name: 📊 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: client/.next
          retention-days: 1

  # Job 2: Database Setup
  setup-database:
    name: 🗄️ Setup Neon Database
    runs-on: ubuntu-latest
    needs: setup-and-build
    if: needs.setup-and-build.outputs.should-deploy == 'true'
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: 📦 Install Dependencies
        working-directory: ./client
        run: npm ci

      - name: 🗄️ Setup Neon Database
        working-directory: ./client
        run: |
          node scripts/setup-neon-database.js
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: 🌱 Generate Mock Data
        working-directory: ./client
        run: |
          node scripts/generate-comprehensive-mock-data.js
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  # Job 3: Deploy to Vercel
  deploy-vercel:
    name: 🚀 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [setup-and-build, setup-database]
    if: needs.setup-and-build.outputs.should-deploy == 'true'
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: 📦 Install Dependencies
        working-directory: ./client
        run: |
          npm ci
          npm install -g vercel

      - name: 🚀 Deploy to Vercel
        working-directory: ./client
        run: |
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: 🔗 Get Deployment URL
        id: vercel-url
        run: |
          DEPLOYMENT_URL=$(vercel ls --token ${{ secrets.VERCEL_TOKEN }} | grep -o 'https://[^[:space:]]*' | head -1)
          echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "🚀 Deployment URL: $DEPLOYMENT_URL"

  # Job 4: Post-Deployment Tests
  post-deployment-tests:
    name: 🧪 Post-Deployment Tests
    runs-on: ubuntu-latest
    needs: deploy-vercel
    if: needs.setup-and-build.outputs.should-deploy == 'true'
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Install Dependencies
        working-directory: ./client
        run: npm ci

      - name: 🧪 Run E2E Tests
        working-directory: ./client
        run: |
          npm run test:e2e
        env:
          DEPLOYMENT_URL: ${{ needs.deploy-vercel.outputs.deployment-url }}
        continue-on-error: true

      - name: 📊 Generate Test Report
        working-directory: ./client
        run: |
          node scripts/generate-test-report.js
        env:
          DEPLOYMENT_URL: ${{ needs.deploy-vercel.outputs.deployment-url }}

  # Job 5: Notify Deployment Status
  notify-deployment:
    name: 📢 Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-vercel, post-deployment-tests]
    if: always()
    
    steps:
      - name: 📢 Notify Success
        if: needs.deploy-vercel.result == 'success'
        run: |
          echo "✅ Bell24H deployment successful!"
          echo "🌐 URL: ${{ needs.deploy-vercel.outputs.deployment-url }}"
          echo "📊 Features deployed:"
          echo "  - 50 Categories with 400+ Subcategories"
          echo "  - Enhanced Product Showcase"
          echo "  - Flash Category Cards"
          echo "  - Complete RFQ System (Video/Voice/Text)"
          echo "  - 20,000+ Suppliers"
          echo "  - 60,000+ Products"

      - name: 📢 Notify Failure
        if: needs.deploy-vercel.result == 'failure'
        run: |
          echo "❌ Bell24H deployment failed!"
          echo "Please check the logs for details."

      - name: 📊 Create Deployment Summary
        run: |
          cat << EOF > deployment-summary.md
          # 🚀 Bell24H Deployment Summary
          
          **Status**: ${{ needs.deploy-vercel.result == 'success' && '✅ Success' || '❌ Failed' }}
          **URL**: ${{ needs.deploy-vercel.outputs.deployment-url }}
          **Timestamp**: $(date -u)
          
          ## 📊 System Statistics
          - **Categories**: 50 main + 400+ subcategories
          - **Suppliers**: 20,000-40,000 verified suppliers
          - **Products**: 60,000-200,000 products
          - **RFQs**: 180,000-600,000 mock RFQs
          
          ## 🎯 Features Deployed
          - ✅ Enhanced Product Showcase with filtering
          - ✅ Flash Category Cards with 3D animations
          - ✅ Complete RFQ System (Video/Voice/Text)
          - ✅ Responsive Design
          - ✅ Production-ready performance
          
          ## 🔗 Key URLs
          - **Homepage**: ${{ needs.deploy-vercel.outputs.deployment-url }}/
          - **Product Showcase**: ${{ needs.deploy-vercel.outputs.deployment-url }}/product-showcase
          - **Categories**: ${{ needs.deploy-vercel.outputs.deployment-url }}/categories
          - **RFQ System**: ${{ needs.deploy-vercel.outputs.deployment-url }}/rfq
          - **Admin Dashboard**: ${{ needs.deploy-vercel.outputs.deployment-url }}/admin
          EOF
